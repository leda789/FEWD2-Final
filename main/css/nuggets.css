:root {
  --lineHeight: calc(1em + .5em);
  
  --redLt: #F98280;
  --redDk: #B40B08;
  --orangeLt: #D28356;
  --orangeDk: #BB4400;
  --yellowLt: #EBBF21;
  --yellowDk: #695611;
  --greenLt: #84DB85;
  --greenDk: #1D631F;
  --blueLt: #86BBD8;  
  --blueDk: #2F5C7F;
  
  --primaryDkr: #0B1822;
  --primaryDk: #0F2333;
  --primaryLt: #E8F1F7;
  --primaryLt2: #fff2e5;
}
html { scroll-behavior: smooth; }
body {
  font: 16px 'outfit', sans-serif;
}
/*generic styling*/
abbr {
  text-decoration: underline dotted;
}
address {
  font-style: normal;
}
blockquote {
  text-align: center;
  font-style: italic;
  padding: 1em .5em;
  background-color: rgba(0,0,0,.15);
}
cite {
  font-style: italic;
}
code, samp {
  font-family: monospace;
  background-color: rgba(0,0,0,.15);
}
dt {
  font-weight: bold;
}
table {
  border-collapse: collapse;
}
th, td {
  padding: .2em;
}
/****nav****/
.navbar{
    height: 4.5rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 2rem;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    background-color: var(--primaryDk);
    box-shadow: 0 2px 8px rgba(0,0,0,.3);
    z-index: 10;
 }
.navbar a { text-decoration: none; }
.navbar ul { list-style: none; }
.navbar .logo a {
    color: var(--primaryLt);
    font-size: 2rem;
 }
.navbar .links li {
  position: relative;
  height: 100%;
}
.navbar .links li:hover {
  color: var(--primaryLt2);
}
.navbar .links li a{
    color: var(--primaryLt);
    display: block;
 }
.navbar .links li .arrowIcon {
    color: var(--primaryLt);
    transition: all .3s;
}
.navbar .links li:hover .arrowIcon{
    transform: rotate(180deg);
}

.navbar .navLinks .links li:hover .subMenu,
.navBar .navLinks .links li .subMenu:hover 
{ display: block; }

.navbar .navLinks{
    height: 100%;
    position: fixed;
    top: 0;
    left: -100%;
    width: min(270px, 100%);
    background-color: inherit;
    line-height: 50px;
    padding: 1.5rem;
    transition: all .5s ease;
    z-index: 10;
 }
.navbar .menuIcon, .navLinks .closeIcon {
    color: var(--primaryLt);
    font-size: 45px;
    cursor: pointer;
 }
.navLinks .closeIcon { transform: translateX(190px); }
.navbar .navLinks .links { margin-top: 1.5rem; }
.navbar .navLinks .links .subMenu  {
   display: none;
   position: relative;
   top: 0;
   left: 2rem;
   box-shadow: none;
   background-color: var(--primaryDkr);
 }

@media screen and (min-width: 600px) {
.navbar .navLinks .links {
    display: flex;
    align-items: center;
    height: 100%;
    margin-top: 0;
 }
.navbar .navLinks {
    position: static;
    height: 100%;
    width: auto;
    padding: 0;
    line-height: 70px; /*to center align text*/
  }
.navbar .links li a{
    padding: 0 1em;
  }
.navbar .navLinks .links .subMenu {  
    border-radius: 0 0 4px 4px;
    position: absolute;
    top: 72px;
    left: 0;
    display: none;
    z-index: 2;
  }
.navbar .menuIcon, .navLinks .closeIcon {display: none;}
}

@media screen and (min-width: 800px) {
  nav.navbar .links li a {
    padding: 0 1.75em;
  }
}

/*form styling*/
form{
  border-radius: 1rem;
  box-shadow: 0 2px 8px rgba(0,0,0,.3);
  border: 1px solid var(--primaryDk);
  padding: 1.5rem;
  margin: 0 auto;
  height: min(100vh, 50%);

}
fieldset{
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
input,
textarea {
  background-color: var(--primaryLt);
  border-radius: .17rem;
  border: 1px solid var(--primaryDkr); 
  color: var(--primaryDk);
}
label { display: block; }

input[type="radio"], input[type="checkbox"] {
  -webkit-appearance: none;
  background-color: var(--primaryLt);
  padding: .5em;
}
input[type="radio"] {
  border-radius: 50%;
}
input[type="radio"]:checked { 
  background-color: #555;
  background-image: radial-gradient( var(--primaryDk) 30%, white 30%);
}
input[type="checkbox"]:checked {
  background-color: #555;
  background-image: linear-gradient(to top right, transparent 45%, var(--primaryDk) 45%, var(--primaryDk) 55%, transparent 55%),
                    linear-gradient(to top left, white 45%, var(--primaryDk) 45%, var(--primaryDk) 55%, white 55%);
}
input:focus, textarea:focus, input[type="radio"]:hover, input[type="checkbox"]:hover, input[type="radio"]:checked, input[type="checkbox"]:checked {
  outline: solid 1px var(--blueDk);
  border: solid 1px var(--blueDk);
  box-shadow: 0 0 3px var(--blueDk);
}
@media only screen and (min-width: 600px) {
  fieldset {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: .5em;
  }
}

/*To use the grid you need to add a container element. Inside the container, you can add rows to organize your columns. Use col-1 through col-12 to determine the width of the column*/
      
  .container {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
  }
  /*for mobile devices*/
  [class^="col-"] {
    width: 100%;
    align-items: center;
  }

  /* Media Queries */

  @media only screen and (min-width: 600px) {
  /* mobile landscape */
    [class^="col-"] { flex-basis: 48%; }
    .col-12 { flex-basis: 100%; }
  }
  
  @media only screen and (min-width: 984px) {
  /* tablets */
    [class^="col-"] {
      flex-basis: 32%; 
      flex-grow: 1;
    }
    .col-12 { flex-basis: 100%; }
  }
  
  /* Desktop */
  @media only screen and (min-width: 1200px) {
    .col-12{ width: 100%; }
    .col-11{ width: 91.66%; }
    .col-10{ width: 83.33%; }
    .col-9 { width: 75%; }
    .col-8 { width: 66.66%; }
    .col-7 { width: 58.33%; }
    .col-6 { width: 50%; }
    .col-5 { width: 41.66%; }
    .col-4 { width: 33.33%; }
    .col-3 { width: 25%; }
    .col-2 { width: 16.66%; }
    .col-1 { width: 8.33%; }
  }
    
/*list styling classes*/
.listNoStyle { list-style: none; }
.listStyleSquare { list-style-type: square; }
.listStyleCircle { list-style-type: circle; }
.listStyleRoman { list-style-type: upper-roman; }
.listStyleDecimal { list-style-type: decimal; }
.listStyleUppercase { list-style-type: upper-latin; }
.listStyleLowercase { list-style-type: lower-latin; }
.listStyleLeadingZero { list-style-type: decimal-leading-zero; }

/*colors*/
.red {
  border-color: var(--redDk);  
  background-color: var(--redLt);
}
.orange {
  border-color: var(--orangeDk);
  background-color: var(--orangeLt);
}
.yellow {
  border-color: var(--yellowDk);
  background-color: var(--yellowLt);
}
.green {
  border-color: var(--greenDk);
  background-color: var(--greenLt);
}
.blue {
  border-color: var(--blueDk);
  background-color: var(--blueLt);
}
.red, .orange, .yellow, .green, .blue {
  color: var(--primaryDk);
}
.dark {
  border-color: var(--primaryLt);
  background-color: var(--primaryDk);
}
.redDark {
  border-color: var(--redLt);  
  background-color: var(--redDk);
}
.orangeDark {
  border-color: var(--orangeLt);
  background-color: var(--orangeDk);
}
.yellowDark {
  border-color: var(--yellowLt);
  background-color: var(--yellowDk);
}
.greenDark {
  border-color: var(--greenLt);
  background-color: var(--greenDk);
}
.blueDark {
  border-color: var(--blueLt);
  background-color: var(--blueDk);
}
.redDark, .yellowDark, .orangedark, .greenDark, .blueDark, .dark {
  color: var(--primaryLt);
}
/* carousel classes
*with 'n' amount of slides
*coursel formatting: section.carousel>button.carouselLeftBtn+(div.carouselContainer>ul.carouselItems>li.carouselSlide*n)
*                    +button.carouselRightBtn+nav.carouselNav>button.carouselIndicator*n
*put font awesome icons inside carousel right and left buttons
*height needs to be specified on .carousel, otherwise everything collapses
*put class of "current slide" on the first button.carouselIndicator and the first .carouselSlide
*/
.carousel {
    max-width: calc(100% - 80px);
    margin: 0 auto;
    position: relative;
}
.carouselContainer {
    height: 100%;
    position: relative;
    overflow: hidden;
}
.carouselItems {
    list-style-type: none;
    height: 100%;
    position: relative;
    transition: transform .5s ease-in-out;
}
.carouselSlide {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 100%;
    background-color: rgba(0,0,0,.1);
}
.carouselLeftBtn, .carouselRightBtn {
    background-color: transparent;
    border: none;
    font-size: 2rem;
    color: rgb(150,150,150);
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer;
    z-index: 1;
}
.carouselLeftBtn { left: -40px; }
.carouselRightBtn { right: -40px; }
.carouselNav {
    display: flex;
    justify-content: center;
    padding: 0.5rem 0;
    position: relative;
    bottom: 0;
}
.carouselIndicator {
    background-color: rgb(150,150,150);
    border: 0;
    border-radius: 50%;
    width: 15px;
    height: 15px;
    margin: 0 10px;
    cursor: pointer;
    transition: background-color .5s;
    padding: 0;
}
.carouselIndicator.currentSlide {
  background-color: rgba(0,0,0,.15);
}
.isHidden {
  display: none;
}
/*buttons*/
  button,
  input[type="button"],
  input[type="submit"],
  input[type="reset"] {
    border-radius: 1em;
    font-size: 14px;
    font-weight: bold;
    border: 2px solid var(--primaryDkr);
    background-color: var(--primaryLt);
    color: var(--primaryDk);
    cursor: pointer;
    margin: 10px;
    padding: 10px 20px;
  }
  
  /* Dark button styling */
  .btnDk {
    background-color: var(--primaryDk);
    color: var(--primaryLt);
  }
  
  /* Extra Small button */
  .btn-xs {
    padding: 5px 10px;
    font-size: 12px;
  }
  
  /* Small button */
  .btn-sm {
    padding: 8px 16px;
  }
  
  /* Large button */
  .btn-lg {
    padding: 14px 28px;
    font-size: 18px;
  }
  
  [class^="btn"]:hover {
    background-color: var(--greenLt);
  }
  
  [class^="btn"]:active {
    background-color: var(--redLt);
  }


/*cards*/
.card {
  border-radius: 1rem;
  position: relative;
  color: var(--primaryDk);
  box-shadow: 5px 5px 5px 0 rgba(0,0,0,.15);
  transition: transform .5s ease-in-out;
}
.card:hover {
  transform: scale(1.1);
  z-index: 1;
}
.card a:link, .card a:visited {
  color: var(--primaryDk);
}

.card img {
  border-radius: 1rem;
  max-height: 100%;
  margin: auto;
}

.card p {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 0 0 1rem 1rem;
  background-color: rgba(255,255,255,.4);
  padding: .5rem 2rem;
}
.card i {
  position: absolute;
  padding: .5rem 2rem;
  right: 0;
  bottom: 0;
}
.card p, .card i {
  text-shadow: 0 0 1rem white;
}

/*modal window
* format to make: div.modal>button.modalBtn[onclick="openPopup()"]+div#popup.popup>button[onclick="closePopup()"]
*/
.modal {
  position: fixed;
  inset: 0;
  background-color: rgba(0,0,0,.5);
  display: flex;
  align-items: center;
  justify-content: center;
  visibility: hidden;
}
.popup {
  width: 275px;
  background: var(--primaryLt);
  border-radius: 1rem;
  position: fixed;
  top: 0;
  left: 50%;
  height: 400px;
  transform: translate(-50%, -50%) scale(.1);
  text-align: center;
  padding: 0 2rem 2rem;
  color: #333;
  visibility: hidden;
  transition: transform 0.4s, top 0.4s;
}
.open-popup .popup {
  top: 50%;
  transform: translate(-50%, -50%) scale(1);
  z-index: 15;
}
.open-popup, .open-popup .popup {
  visibility: visible;
}
@media screen and (min-width: 600px){
  .popup {
    width: 400px; }
}

/*food icons*/
@font-face {
  font-family: 'foodIcons';
  src:  url('icons/foodIcons.eot?dzfose');
  src:  url('icons/foodIcons.eot?dzfose#iefix') format('embedded-opentype'),
    url('icons/foodIcons.ttf?dzfose') format('truetype'),
    url('icons/foodIcons.woff?dzfose') format('woff'),
    url('icons/foodIcons.svg?dzfose#foodIcons') format('svg');
  font-weight: normal;
  font-style: normal;
  font-display: block;
}

i[class^="icon"]{
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'foodIcons' !important;
  speak: never;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;

  /* Better Font Rendering  */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.iconVegan:before {
  content: "\e904";
}
.iconDairy:before {
  content: "\e900";
}
.iconDairyFree:before {
  content: "\e901";
}
.iconEgg:before {
  content: "\e902";
}
.iconEggFree:before {
  content: "\e903";
}
.iconFavorite:before {
  content: "\1f31f";
}
.iconFish:before {
  content: "\1f41f";
}
.iconGluten:before {
  content: "\1f35e";
}
.iconGlutenFree:before {
  content: "\e907";
}
.iconNut:before {
  content: "\e905";
}
.iconNutFree:before {
  content: "\e909";
}
.iconShellfish:before {
  content: "\1f980";
}
.iconSpicy:before {
  content: "\1f336";
}
.iconVeggie:before {
  content: "\1f33f";
}

/*food price application*/

.addItemButton {
  border-radius: 1rem;
  padding: .5em 1em;
} 
.itemPrice::before {
  content: "$";
}

/*tables*/
table.shadeSecondRows tr:nth-child(even), table.shadeOtherRows tr:nth-child(odd),
table.shadeSecondColumns td:nth-child(even), table.shadeOtherColumns td:nth-child(odd),
table.shadeSecondColumns th:nth-child(even), table.shadeOtherColumns th:nth-child(odd) {
  background-color: rgba(0,0,0,.15);
}
table.wordBreak {
  word-break: break-all;
}
.scrollX, .scrollXSticky {
  overflow: auto;
}
.scrollXSticky td:first-of-type,
.scrollXSticky th:first-of-type {
  position: sticky;
  left: 0;
  background-color: var(--primaryLt);
}
.scrollYSticky tr:first-of-type {
  position: sticky;
  top: 0; /*height of sticky nav, if any*/
  background-color: var(--primaryLt);
}

/*helper classes*/
.borderDashed, .borderDashedLt {
  border: 1px dashed var(--primaryDk);
}
.borderSolid, .borderSolidLt {
  border: 1px solid var(--primaryDk);
}
.borderDotted, .borderDottedLt {
  border: 1px dotted var(--primaryDk);
}
.borderDouble, .borderDoubleLt {
  border: 1px double var(--primaryDk);
}
.borderDoubleLt, .borderDottedLt, .borderSolidLt, .borderDashedLt {
  border-color: var(--primaryLt);
}
.floatLeft {
  float: left
}
.floatRight {
  float: right;
}
.floarClear {
  clear: both;
}
.inlineBlock {
  display: inline-block;
}
.center {
  margin-right: auto;
  margin-left: auto;
}
.transition, .transitionFast, .transitionSlow {
  transition: all .5s;
}
.transitionFast {
  transition-duration: .2s;
}
.transitionSlow {
  transition-duration: 1s;
}
.upRight{ transform: rotate(45deg); }
.right{ transform: rotate(90deg); }
.downRight{ transform: rotate(135deg); }
.down{ transform: rotate(180deg); }
.downLeft{ transform: rotate(-135deg); }
.left{ transform: rotate(-90deg); }
.upLeft{ transform: rotate(-45deg); }

/*text alignment classes*/
.textRight {
  text-align: right;
}
.textCenter {
  text-align: center;
}
.textLeft {
  text-align: left;
}
.textJustify {
  text-align: justify;
}

/*text-transform classes*/
.uppercase {
  text-transform: uppercase;
}
.lowercase {
  text-transform: lowercase;
}
.capitalize {
  text-transform: capitalize;
}

@media print {
  .dontPrint {
    visibility: hidden;
  }
}